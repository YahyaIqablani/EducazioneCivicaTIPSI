using System;

public class StringFunctions
{
    private int counter = 0;

    public string ReplaceStringCharacters(string s, int n)
    {
        string result = "";
        foreach (char c in s)
        {
            if (Char.IsLetter(c))
            {
                char newChar = (char)(c + n);
                if (newChar > 'z')
                {
                    newChar = (char)(newChar - 26);
                }
                result += newChar;
            }
            else
            {
                result += c;
            }
        }
        return result;
    }

    public string ReplaceStringCharactersBackward(string s, int n)
    {
        string result = "";
        foreach (char c in s)
        {
            if (Char.IsLetter(c))
            {
                char newChar = (char)(c - n);
                if (newChar < 'a')
                {
                    newChar = (char)(newChar + 26);
                }
                result += newChar;
            }
            else
            {
                result += c;
            }
        }
        return result;
    }

    public int CalculateStringSum(string s, int n)
    {
        int sum = 0;
        foreach (char c in s)
        {
            if (Char.IsLetter(c))
            {
                int value = Char.ToLower(c) - 'a' + 1;
                sum += value;
            }
        }
        return sum * n;
    }

    public int CalculateStringProduct(string s, int n)
    {
        int product = 1;
        foreach (char c in s)
        {
            if (Char.IsLetter(c))
            {
                int value = Char.ToLower(c) - 'a' + 1;
                product *= value;
            }
        }
        return (int)Math.Ceiling((double)product / n);
    }

    public int CalculateStringFunction(string s, int n)
    {
        if (n % 2 == 0)
        {
            counter++;
            return CalculateStringSum(s, n);
        }
        else
        {
            counter++;
            return CalculateStringProduct(s, n);
        }
    }

    public int GetCounter()
    {
        return counter;
    }

    public static int CalculateStringFunction(string s, int c)
    {
        StringFunctions sf = new StringFunctions();
        int result = sf.CalculateStringFunction(s, c);
        int counter = sf.GetCounter();
        return result;
    }
}